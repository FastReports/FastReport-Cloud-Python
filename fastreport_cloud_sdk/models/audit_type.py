# coding: utf-8

"""
    FastReport Cloud

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: v1
    Generated by: https://openapi-generator.tech
"""


try:
    from inspect import getfullargspec
except ImportError:
    from inspect import getargspec as getfullargspec
import pprint
import re  # noqa: F401
import six

from fastreport_cloud_sdk.configuration import Configuration


class AuditType(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    allowed enum values
    """
    TASK_CREATED_EXPORTTEMPLATE = "Task_Created_ExportTemplate"
    TASK_CREATED_EXPORTREPORT = "Task_Created_ExportReport"
    TASK_CREATED_PREPARETEMPLATE = "Task_Created_PrepareTemplate"
    TASK_CREATED_FETCH = "Task_Created_Fetch"
    TASK_CREATED_EMAIL = "Task_Created_Email"
    TASK_CREATED_WEBHOOK = "Task_Created_Webhook"
    TASK_DELETED_EXPORTTEMPLATE = "Task_Deleted_ExportTemplate"
    TASK_DELETED_EXPORTREPORT = "Task_Deleted_ExportReport"
    TASK_DELETED_PREPARETEMPLATE = "Task_Deleted_PrepareTemplate"
    TASK_DELETED_FETCH = "Task_Deleted_Fetch"
    TASK_DELETED_EMAIL = "Task_Deleted_Email"
    TASK_DELETED_WEBHOOK = "Task_Deleted_Webhook"
    TASK_UPDATED_EXPORTTEMPLATE = "Task_Updated_ExportTemplate"
    TASK_UPDATED_EXPORTREPORT = "Task_Updated_ExportReport"
    TASK_UPDATED_PREPARETEMPLATE = "Task_Updated_PrepareTemplate"
    TASK_UPDATED_FETCH = "Task_Updated_Fetch"
    TASK_UPDATED_EMAIL = "Task_Updated_Email"
    TASK_UPDATED_WEBHOOK = "Task_Updated_Webhook"
    TASK_INQUEUE_EXPORTTEMPLATE = "Task_InQueue_ExportTemplate"
    TASK_INQUEUE_EXPORTREPORT = "Task_InQueue_ExportReport"
    TASK_INQUEUE_PREPARETEMPLATE = "Task_InQueue_PrepareTemplate"
    TASK_INQUEUE_FETCH = "Task_InQueue_Fetch"
    TASK_INQUEUE_EMAIL = "Task_InQueue_Email"
    TASK_INQUEUE_WEBHOOK = "Task_InQueue_Webhook"
    TASK_INPROCESS_EXPORTTEMPLATE = "Task_InProcess_ExportTemplate"
    TASK_INPROCESS_EXPORTREPORT = "Task_InProcess_ExportReport"
    TASK_INPROCESS_PREPARETEMPLATE = "Task_InProcess_PrepareTemplate"
    TASK_INPROCESS_FETCH = "Task_InProcess_Fetch"
    TASK_INPROCESS_EMAIL = "Task_InProcess_Email"
    TASK_INPROCESS_WEBHOOK = "Task_InProcess_Webhook"
    TASK_SUCCESS_EXPORTTEMPLATE = "Task_Success_ExportTemplate"
    TASK_SUCCESS_EXPORTREPORT = "Task_Success_ExportReport"
    TASK_SUCCESS_PREPARETEMPLATE = "Task_Success_PrepareTemplate"
    TASK_SUCCESS_FETCH = "Task_Success_Fetch"
    TASK_SUCCESS_EMAIL = "Task_Success_Email"
    TASK_SUCCESS_WEBHOOK = "Task_Success_Webhook"
    TASK_FAILED_EXPORTTEMPLATE = "Task_Failed_ExportTemplate"
    TASK_FAILED_EXPORTREPORT = "Task_Failed_ExportReport"
    TASK_FAILED_PREPARETEMPLATE = "Task_Failed_PrepareTemplate"
    TASK_FAILED_FETCH = "Task_Failed_Fetch"
    TASK_FAILED_EMAIL = "Task_Failed_Email"
    TASK_FAILED_WEBHOOK = "Task_Failed_Webhook"
    TASK_CREATED_THUMBNAILREPORT = "Task_Created_ThumbnailReport"
    TASK_DELETED_THUMBNAILREPORT = "Task_Deleted_ThumbnailReport"
    TASK_UPDATED_THUMBNAILREPORT = "Task_Updated_ThumbnailReport"
    TASK_INQUEUE_THUMBNAILREPORT = "Task_InQueue_ThumbnailReport"
    TASK_INPROCESS_THUMBNAILREPORT = "Task_InProcess_ThumbnailReport"
    TASK_SUCCESS_THUMBNAILREPORT = "Task_Success_ThumbnailReport"
    TASK_FAIL_THUMBNAILREPORT = "Task_Fail_ThumbnailReport"
    TASK_CREATED_THUMBNAILTEMPLATE = "Task_Created_ThumbnailTemplate"
    TASK_DELETED_THUMBNAILTEMPLATE = "Task_Deleted_ThumbnailTemplate"
    TASK_UPDATED_THUMBNAILTEMPLATE = "Task_Updated_ThumbnailTemplate"
    TASK_INQUEUE_THUMBNAILTEMPLATE = "Task_InQueue_ThumbnailTemplate"
    TASK_INPROCESS_THUMBNAILTEMPLATE = "Task_InProcess_ThumbnailTemplate"
    TASK_SUCCESS_THUMBNAILTEMPLATE = "Task_Success_ThumbnailTemplate"
    TASK_FAIL_THUMBNAILTEMPLATE = "Task_Fail_ThumbnailTemplate"
    SUBSCRIPTION_RENEWED = "Subscription_Renewed"
    SUBSCRIPTION_CREATED = "Subscription_Created"
    FILE_RENAMED = "File_Renamed"
    FILE_CONTENT_UPDATED = "File_Content_Updated"
    FILE_DELETED = "File_Deleted"
    FILE_MOVED = "File_Moved"
    FILE_COPIED = "File_Copied"
    FILE_TAGS_UPDATED = "File_Tags_Updated"
    FILE_PERMISSIONS_UPDATED = "File_Permissions_Updated"
    FILE_RESTORED = "File_Restored"
    FILE_MOVEDTOBIN = "File_MovedToBin"
    FILE_UPDATED = "File_Updated"

    allowable_values = [TASK_CREATED_EXPORTTEMPLATE, TASK_CREATED_EXPORTREPORT, TASK_CREATED_PREPARETEMPLATE, TASK_CREATED_FETCH, TASK_CREATED_EMAIL, TASK_CREATED_WEBHOOK, TASK_DELETED_EXPORTTEMPLATE, TASK_DELETED_EXPORTREPORT, TASK_DELETED_PREPARETEMPLATE, TASK_DELETED_FETCH, TASK_DELETED_EMAIL, TASK_DELETED_WEBHOOK, TASK_UPDATED_EXPORTTEMPLATE, TASK_UPDATED_EXPORTREPORT, TASK_UPDATED_PREPARETEMPLATE, TASK_UPDATED_FETCH, TASK_UPDATED_EMAIL, TASK_UPDATED_WEBHOOK, TASK_INQUEUE_EXPORTTEMPLATE, TASK_INQUEUE_EXPORTREPORT, TASK_INQUEUE_PREPARETEMPLATE, TASK_INQUEUE_FETCH, TASK_INQUEUE_EMAIL, TASK_INQUEUE_WEBHOOK, TASK_INPROCESS_EXPORTTEMPLATE, TASK_INPROCESS_EXPORTREPORT, TASK_INPROCESS_PREPARETEMPLATE, TASK_INPROCESS_FETCH, TASK_INPROCESS_EMAIL, TASK_INPROCESS_WEBHOOK, TASK_SUCCESS_EXPORTTEMPLATE, TASK_SUCCESS_EXPORTREPORT, TASK_SUCCESS_PREPARETEMPLATE, TASK_SUCCESS_FETCH, TASK_SUCCESS_EMAIL, TASK_SUCCESS_WEBHOOK, TASK_FAILED_EXPORTTEMPLATE, TASK_FAILED_EXPORTREPORT, TASK_FAILED_PREPARETEMPLATE, TASK_FAILED_FETCH, TASK_FAILED_EMAIL, TASK_FAILED_WEBHOOK, TASK_CREATED_THUMBNAILREPORT, TASK_DELETED_THUMBNAILREPORT, TASK_UPDATED_THUMBNAILREPORT, TASK_INQUEUE_THUMBNAILREPORT, TASK_INPROCESS_THUMBNAILREPORT, TASK_SUCCESS_THUMBNAILREPORT, TASK_FAIL_THUMBNAILREPORT, TASK_CREATED_THUMBNAILTEMPLATE, TASK_DELETED_THUMBNAILTEMPLATE, TASK_UPDATED_THUMBNAILTEMPLATE, TASK_INQUEUE_THUMBNAILTEMPLATE, TASK_INPROCESS_THUMBNAILTEMPLATE, TASK_SUCCESS_THUMBNAILTEMPLATE, TASK_FAIL_THUMBNAILTEMPLATE, SUBSCRIPTION_RENEWED, SUBSCRIPTION_CREATED, FILE_RENAMED, FILE_CONTENT_UPDATED, FILE_DELETED, FILE_MOVED, FILE_COPIED, FILE_TAGS_UPDATED, FILE_PERMISSIONS_UPDATED, FILE_RESTORED, FILE_MOVEDTOBIN, FILE_UPDATED]  # noqa: E501

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
    }

    attribute_map = {
    }

    def __init__(self, local_vars_configuration=None):  # noqa: E501
        """AuditType - a model defined in OpenAPI"""  # noqa: E501
        if local_vars_configuration is None:
            local_vars_configuration = Configuration.get_default_copy()
        self.local_vars_configuration = local_vars_configuration
        self.discriminator = None

    def to_dict(self, serialize=False):
        """Returns the model properties as a dict"""
        result = {}

        def convert(x):
            if hasattr(x, "to_dict"):
                args = getfullargspec(x.to_dict).args
                if len(args) == 1:
                    return x.to_dict()
                else:
                    return x.to_dict(serialize)
            else:
                return x

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            attr = self.attribute_map.get(attr, attr) if serialize else attr
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: convert(x),
                    value
                ))
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], convert(item[1])),
                    value.items()
                ))
            else:
                result[attr] = convert(value)

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, AuditType):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, AuditType):
            return True

        return self.to_dict() != other.to_dict()
