# coding: utf-8

"""
    FastReport Cloud

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: v1
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import fastreport_cloud_sdk
from fastreport_cloud_sdk.models.subscriptions_vm import SubscriptionsVM  # noqa: E501
from fastreport_cloud_sdk.rest import ApiException

class TestSubscriptionsVM(unittest.TestCase):
    """SubscriptionsVM unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test SubscriptionsVM
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = fastreport_cloud_sdk.models.subscriptions_vm.SubscriptionsVM()  # noqa: E501
        if include_optional :
            return SubscriptionsVM(
                subscriptions = [
                    fastreport_cloud_sdk.models.subscription_vm.SubscriptionVM(
                        id = '', 
                        name = '', 
                        locale = '', 
                        current = fastreport_cloud_sdk.models.subscription_period_vm.SubscriptionPeriodVM(
                            start_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            end_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            plan = fastreport_cloud_sdk.models.subscription_plan_vm.SubscriptionPlanVM(
                                id = '', 
                                is_active = True, 
                                display_name = '', 
                                time_period_type = null, 
                                time_period = 56, 
                                readonly_time_limit_type = 'Second', 
                                readonly_time_limit = 56, 
                                templates_space_limit = 56, 
                                reports_space_limit = 56, 
                                exports_space_limit = 56, 
                                file_upload_size_limit = 56, 
                                data_source_limit = 56, 
                                max_users_count = 56, 
                                group_limit = 56, 
                                online_designer = True, 
                                is_demo = True, 
                                url_to_buy = '', 
                                unlimited_page = True, 
                                page_limit = 56, 
                                tasks = fastreport_cloud_sdk.models.task_settings_vm.TaskSettingsVM(
                                    prepare = True, 
                                    export_template = True, 
                                    export_report = True, 
                                    send_via_email = True, 
                                    upload_to_ftp = True, 
                                    send_via_webhook = True, 
                                    fetch_data = True, 
                                    thumbnail_report = True, 
                                    thumbnail_template = True, ), ), ), 
                        old = [
                            fastreport_cloud_sdk.models.subscription_period_vm.SubscriptionPeriodVM(
                                start_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                end_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                            ], 
                        templates_folder = fastreport_cloud_sdk.models.subscription_folder.SubscriptionFolder(
                            folder_id = '', 
                            bytes_used = 56, ), 
                        reports_folder = fastreport_cloud_sdk.models.subscription_folder.SubscriptionFolder(
                            folder_id = '', 
                            bytes_used = 56, ), 
                        exports_folder = , )
                    ], 
                count = 56, 
                skip = 56, 
                take = 56
            )
        else :
            return SubscriptionsVM(
        )

    def testSubscriptionsVM(self):
        """Test SubscriptionsVM"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
